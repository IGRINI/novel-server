package interfaces

import (
	"context"
	"novel-server/shared/models"

	"github.com/google/uuid"
)

// StorySceneRepository defines the interface for interacting with story scene data.
type StorySceneRepository interface {
	// Create inserts a new story scene record.
	// Used when a new scene is generated by the AI.
	Create(ctx context.Context, scene *models.StoryScene) error

	// FindByStoryAndHash attempts to find an existing scene for a given story
	// based on the state hash that led to it. Returns ErrNotFound if no scene exists.
	FindByStoryAndHash(ctx context.Context, publishedStoryID uuid.UUID, stateHash string) (*models.StoryScene, error)

	// GetByID retrieves a story scene by its unique ID.
	// Returns models.ErrNotFound if the scene is not found.
	GetByID(ctx context.Context, id uuid.UUID) (*models.StoryScene, error)

	// ListByStoryID retrieves all scenes for a given story.
	// Returns models.ErrNotFound if no scenes exist for the story.
	ListByStoryID(ctx context.Context, publishedStoryID uuid.UUID) ([]models.StoryScene, error)
}
