// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	context "context"
	messaging "novel-server/gameplay-service/internal/messaging"

	mock "github.com/stretchr/testify/mock"
)

// PushNotificationPublisher is an autogenerated mock type for the PushNotificationPublisher type
type PushNotificationPublisher struct {
	mock.Mock
}

// PublishPushNotification provides a mock function with given fields: ctx, payload
func (_m *PushNotificationPublisher) PublishPushNotification(ctx context.Context, payload messaging.PushNotificationPayload) error {
	ret := _m.Called(ctx, payload)

	if len(ret) == 0 {
		panic("no return value specified for PublishPushNotification")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, messaging.PushNotificationPayload) error); ok {
		r0 = rf(ctx, payload)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewPushNotificationPublisher creates a new instance of PushNotificationPublisher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPushNotificationPublisher(t interface {
	mock.TestingT
	Cleanup(func())
}) *PushNotificationPublisher {
	mock := &PushNotificationPublisher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
